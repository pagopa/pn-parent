<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>it.pagopa.pn</groupId>
    <artifactId>pn-parent</artifactId>
    <version>2.1.2-SNAPSHOT</version>
    <packaging>pom</packaging>
    <description>The parent and aggregator for the PN modules</description>
    <url>https://github.com/orgs/pagopa/teams/piattaforma-notifiche</url>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <java.version>17</java.version>

        <spring.cloud-version>2021.0.5</spring.cloud-version>
        <spring.boot-version>3.0.2</spring.boot-version>
        <awssdk.version>2.18.3</awssdk.version>
        <logstash.logback.encoder-version>7.2</logstash.logback.encoder-version>
        <awspring.version>2.4.2</awspring.version>
        <testcontainers.version>1.17.6</testcontainers.version>
        <pagopa.codegen.version>v01.03.00</pagopa.codegen.version>
        <pagopa.codegen.exec>false</pagopa.codegen.exec>        
        <pagopa.codegen.nocopy>false</pagopa.codegen.nocopy>                
        <pagopa.codegen.script><![CDATA[
#! /bin/bash -e

echo "Per maggiori informazioni vedere: https://github.com/pagopa/pn-codegen"

tag=$(mvn help:evaluate -Dexpression=pagopa.codegen.version -q -DforceStdout)
echo "Tag from pom.xml: ${tag}"
if [[ ! -z $1 ]]; then
    tag=$1
    echo "Tag from command line ${tag}"
fi
docker run --rm -v $$(pwd):/usr/local/app/microsvc --name=pn-codegen ghcr.io/pagopa/pn-codegen:$${tag}
]]>
        </pagopa.codegen.script>

        <jacoco.min.line.cover.ratio>0.10</jacoco.min.line.cover.ratio>
        <sonar.coverage.jacoco.xmlReportPaths>
            ${project.reporting.outputDirectory}/jacoco-unit-test-coverage-report/jacoco.xml,${project.reporting.outputDirectory}/jacoco-integration-test-coverage-report/jacoco.xml
        </sonar.coverage.jacoco.xmlReportPaths>
        <maven.wagon.http.retryHandler.count>3</maven.wagon.http.retryHandler.count>

        <project.scm.id>github</project.scm.id>
        <git.base>github.com/pagopa/${project.artifactId}</git.base>
        <git.conn>scm:git:https://${git.base}.git</git.conn>
        <git.devConn>scm:git:ssh://git@${git.base}.git</git.devConn>
        <git.url>https://${git.base}</git.url>
    </properties>
    <organization>
        <name>PagoPa</name>
        <url>https://www.pagopa.it</url>
    </organization>
    <scm>
        <connection>${git.conn}</connection>
        <developerConnection>${git.devConn}</developerConnection>
        <url>${git.url}</url>
        <tag>v2.1.0</tag>
    </scm>
    <issueManagement>
        <system>Jira</system>
        <url>https://pagopa.atlassian.net/browse/PN</url>
    </issueManagement>
    <dependencyManagement>
        <dependencies>

            <!-- Import dependency management from Spring Boot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot-version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Import dependency from Spring Cloud for kubernetes and stream integrations -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud-version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Import dependency for AWS services clients -->
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>${awssdk.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Logback log encoder for logstash output format -->
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash.logback.encoder-version}</version>
            </dependency>

            <!-- Import dependency for AWS integrated with Spring -->
            <dependency>
                <groupId>io.awspring.cloud</groupId>
                <artifactId>spring-cloud-aws-dependencies</artifactId>
                <version>${awspring.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Import dependency for Testcontainers -->
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- aggiunto in quanto la versione che si porta Spring (1.30) ha diverse vulnerabilitÃ  -->
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>1.33</version>
            </dependency>

        </dependencies>
    </dependencyManagement>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>1.18.20</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot-version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <!--suppress UnresolvedMavenProperty -->
                    <argLine>${surefire.jacoco.args}</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <!--suppress UnresolvedMavenProperty -->
                    <argLine>${failsafe.jacoco.args}</argLine>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.8</version>
                <configuration>
                    <excludes>
                        <exclude>**/generated/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>before-unit-test-execution</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</destFile>
                            <propertyName>surefire.jacoco.args</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>after-unit-test-execution</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-unit-test-coverage-report</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>before-integration-test-execution</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</destFile>
                            <propertyName>failsafe.jacoco.args</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>after-integration-test-execution</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-integration-test-coverage-report</outputDirectory>
                            <formats>XML</formats>
                        </configuration>
                    </execution>
                    <execution>
                        <id>merge-unit-and-integration</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}/jacoco-output/</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                            <destFile>${project.build.directory}/jacoco-output/merged.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-merged-report</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                            <formats>XML</formats>
                        </configuration>
                    </execution>
                    <execution>
                        <id>check</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <excludes>
                                        <exclude>*Test</exclude>
                                        <exclude>*IT</exclude>
                                    </excludes>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.min.line.cover.ratio}</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                            <dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>3.0.0-M7</version>
            </plugin>

            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-antrun-plugin</artifactId>
              <version>3.1.0</version>
              <executions>
                  <execution>
                      <id>init-scripts</id>
                      
                      <configuration>
                        <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                            <property name="codegen.script" value="${pagopa.codegen.script}" />
                            <property name="codegen.exec" value="${pagopa.codegen.exec}" />
                            <property name="codegen.nocopy" value="${pagopa.codegen.nocopy}" />

                            <echo>Skip copy: ${codegen.nocopy}</echo>
                            <echo>Exec: ${codegen.exec}</echo>
                            
                            <echo unless:true="${codegen.nocopy}" message="Genero lo script" />
                            <echo unless:true="${codegen.nocopy}" file="scripts/generate-code.sh">${codegen.script}</echo>

                            <exec executable="chmod" unless:true="${codegen.nocopy}">
                                <arg value="u+x" />
                                <arg value="scripts/generate-code.sh" />
                            </exec>
                            
                            <exec if:true="${codegen.exec}" executable="./scripts/generate-code.sh" />
                        </target>
                      </configuration>
                      <goals>
                          <goal>run</goal>
                      </goals>
                  </execution>
              </executions>
            </plugin>
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>initialize</phase>
                    </execution>
                </executions>
                <configuration>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                    <commitIdGenerationMode>full</commitIdGenerationMode>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
